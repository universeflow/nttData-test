@startuml

title "Diagrama de Clases"

package controller.dtos {
    class UsuarioRequestDto {
        - String correo
        - String password
        - String nombre
        - Boolean activo
        - List<TelefonoDto> telefonos
    }

    class UsuarioResponseDto {
        - UUID id
        - String nombre
        - String correo
        - LocalDateTime creado
        - LocalDateTime modificado
        - LocalDateTime ultimoLogin
        - String token
        - Boolean activo
        - List<TelefonoDto> telefonos
    }

    class TelefonoDto {
        - String numero
        - String codigoPais
        - String codigoCiudad
    }
}

package controller {
    class AutenticacionController {
        - AutenticacionService autenticacionService
        + ResponseEntity<UsuarioResponseDto> signup(UsuarioRequestDto usuarioRequestDto)
        + ResponseEntity<UsuarioResponseDto> login(UsuarioRequestDto loginUserDto)
    }

    class UsuarioController {
        - UsuarioService usuarioService
        + ResponseEntity<List<UsuarioResponseDto>> getAll()
        + ResponseEntity<UsuarioResponseDto> getUsuarioById(UUID uuid)
        + ResponseEntity<UsuarioResponseDto> updateUsuario(UUID uuid, UsuarioRequestDto userDetails)
        + ResponseEntity<UsuarioResponseDto> patchUsuario(UUID uuid, UsuarioRequestDto request)
        + ResponseEntity<Void> deleteUsuario(UUID id)
    }
}

package repository {
    interface UsuarioRepository {
        + Optional<UsuarioEntity> findByCorreo(String correo)
        + Usuario save(UsuarioEntity usuario)
        + Optional<UsuarioEntity> findById(UUID id)
    }
}

package service {
    interface AutenticacionService {
        + UsuarioResponseDto signup(UsuarioRequestDto usuarioRequestDto)
        + UsuarioResponseDto login(UsuarioRequestDto loginUserDto)
    }

    class AutenticacionServiceImpl {
        - UsuarioRepository usuarioRepository
        - UsuarioMapper usuarioMapper
        + UsuarioResponseDto signup(UsuarioRequestDto usuarioRequestDto)
        + UsuarioResponseDto autenticar(UsuarioRequestDto loginUserDto)
    }

    interface UsuarioService {
        + List<UsuarioResponseDto> getAll()
        + Optional<UsuarioResponseDto> getUsuarioById(UUID uuid)
        + UsuarioResponseDto updateUsuario(UUID uuid, UsuarioRequestDto userDetails)
        + UsuarioResponseDto patchUsuario(UUID uuid, UsuarioRequestDto request)
        + void deleteUsuario(UUID id)
    }
}

package entity {
    class UsuarioEntity {
        - UUID id
        - String nombre
        - String correo
        - String password
        - Boolean activo
        - List<TelefonoEntity> telefonos
    }

    class TelefonoEntity {
        - String numero
        - String codigoPais
        - String codigoCiudad
    }
}


package controller.mapper {
    class UsuarioMapper {
        + UsuarioResponseDto toResponseDto(UsuarioEntity usuario)
        + UsuarioEntity toEntity(UsuarioRequestDto usuarioRequestDto)
    }
}

AutenticacionController --> AutenticacionService
UsuarioController --> UsuarioService
AutenticacionServiceImpl --> UsuarioRepository
AutenticacionServiceImpl --> UsuarioMapper
UsuarioRequestDto --> TelefonoDto
UsuarioResponseDto --> TelefonoDto
UsuarioEntity --> TelefonoEntity
UsuarioMapper --> UsuarioEntity
UsuarioMapper --> UsuarioRequestDto
UsuarioMapper --> UsuarioResponseDto

@enduml